class Solution {
public:
    long getTime(vector<int>& piles, int len, int k){
        long tot=0;
        for(int i=0;i<len;i++){
            if((piles[i]%k)==0){
                tot+=(piles[i]/k);
            }else{
                tot+=((piles[i]/k)+1);
            }
        }
        return tot;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1;
        int high=piles[0];
        int n=piles.size();
        for(int i = 1; i < n; i++){
            if(piles[i] > high){
                high = piles[i];
            }
        }
        while(low<=high){
            int mid=(low+high)/2;
            if(getTime(piles, n, mid)<=h){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }
};
