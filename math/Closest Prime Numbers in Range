class Solution {
public:
    bool isPrime(int n){
        if(n==2 || n==3)
        return true;
        if(n<=1)
        return false;
        for(int i=2;i<=sqrt(n);i++){
            if(n%i==0)
            return false;
        }
        return true;
    }
    vector<int> closestPrimes(int left, int right) {
        vector<int> prime;
        vector<int> res = {-1, -1};
        for (int i = left; i <= right; i++) {
            if (isPrime(i)) {
                prime.push_back(i);
            }
        }
        if (prime.size() < 2) return res;
        int diff = INT_MAX;
        for (int i = 0; i < prime.size() - 1; i++) {
            int currDiff = prime[i + 1] - prime[i];
            if (currDiff < diff) {
                diff = currDiff;
                res[0] = prime[i];
                res[1] = prime[i + 1];
            }
        }

        return res;
    }
};
