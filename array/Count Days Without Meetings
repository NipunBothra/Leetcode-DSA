class Solution {
public:
    int countDays(int days, vector<vector<int>>& meetings) {
        int count = 0;
        sort(meetings.begin(), meetings.end());

        vector<vector<int>> merged;
        for (const auto& meeting : meetings) {
            if (merged.empty() || merged.back()[1] < meeting[0]) {
                merged.push_back(meeting);
            } else {

                merged.back()[1] = max(merged.back()[1], meeting[1]);
            }
        }
        count += merged[0][0] - 1;
        for (int i = 1; i < merged.size(); i++) {
            count += (merged[i][0] - merged[i-1][1] - 1);
        }
        count += days - merged.back()[1];

        return count;
    }
};
